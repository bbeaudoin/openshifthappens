---
# Ansible Configuration (overrides ansible.cfg defaults)
ansible_ssh_user: cloud-user
ansible_become: yes

# Primary OpenShift configuration
openshift_deployment_type: openshift-enterprise
openshift_release: v3.11
openshift_is_atomic: false
debug_level: 2

# Local playbook variables
etcd_encrypt_resources: ['secrets', 'configmaps']

# Disable checks if necessary
#openshift_disable_check: memory_availability,disk_availability,docker_storage,docker_image_availability,docker_storage_driver,package_version,package_availability,package_update

oreg_url: registry.redhat.io/openshift3/ose-${component}:${version}

# OpenShift Container Platform uses registry.redhat.io which requires a valid
# subscription. Only YAML-formatted inventories allow inline vault.
oreg_auth_user: !vault |
          $ANSIBLE_VAULT;1.1;AES256
          37383566663862343836653334656562643261626637333139643738306633393966373564336432
          3931353561306539363432356236623637653562383265640a356666366331633135393831333561
          63386132383531326332623337326338363936626138633930646639303735343934323966343631
          6562366637373137340a653065656632306234613938313637346131376661396335313930313632
          66663633323437383235386430383263376438306439393236333139646636623539

# OpenShift Container Platform uses registry.redhat.io which requires a valid
# subscription. Only YAML-formatted inventories allow inline vault.
oreg_auth_password: !vault |
          $ANSIBLE_VAULT;1.1;AES256
          62653130653366623966613839313863396630333334396264663639333933383930346665306332
          3966343836366433323863313935643265343062643163330a626664616238616234633238323264
          64313330376632386162323531363736623437386234376135383235316633386430313135316663
          6339643538393233610a633464333664373763636235346334393233383131386465646564383064
          30376430346665356464383431303635393238653832633330383434653733363065373632343466
          65666437333635353538623238623339303237623430623366313565326335643061623463383539
          31636434623237396537386338313264336665326365356531376136613133636439323637356332
          33386432666666313362623764393832626162383735336662316666343664663935363833663665
          61396364623364663830643562656534313261306435396631323337666666373433323132656663
          39323834356664666266336239373032333834363732346165646139386234383766316162393966
          64393961666338653636613738646266333563643065306439636461643833376330316534313537
          31626564363563366131643336636230393238636131373330313734373138386635326435626638
          35393935633131663432393766626161376632663862303431356537356531666465306265303164
          66313236343135353466356134383565363631356535616635666634373939303663343736333734
          38333834653532666238383862626633666639333961306465383638613662303035393733356161
          64333161303834313535363033386363636461306633623263633834303335316130393562396364
          64636366373763643065626166636136613536393561396363336165396632343166626361393265
          35313531616361666436373634626234376432343636393639303738363966316362646432313430
          30336534636636383430653839376662383464353931383137633436623532326564373939663236
          36313638613930316263356532396131393364623866666332396136373638643464626663383736
          65633164633638623234313162326236336334373036303533306432663931386234353832313466
          62366166663131366438653937343364656361326637663138386564626666616534343536373463
          66656330623365313135366135396334363963333435666335323765373837643563613531643263
          61396266636165653437323937633762656532383463343866623734303537666335633436323937
          31393937626532646563643666366563383134646561623033346533306665633134616466373936
          38393137656631343863313339373566626566613633643631636132376136396230303539306237
          64386130613766396435393238363037326664623161663162343338393566373163376536336663
          35303738313165343633396265376361313062353166316363623961336134323338663439313865
          64353164303336656662363230656165343063613635333638343038646632353737666362663236
          30633237396535303531356265316666633165326462643231353630376536326562326166353131
          63626233323662633239373638393137353433336133376264353933323839613332663763366264
          38616437623831383863383430366339396661653730383061376338613663303634373737363065
          33323536353966333138396266353533303538313135636138373266383131393231636165333561
          66396561653939366237366166643463383265633138383134366566303961343738366439643834
          36396431643562306462393230373237363739643439633738396363623066393735316534333231
          64633965333465643164366531623236623362356437333839343135613133333561343766373966
          30343532633731333761333530666639653364326335643061656261303064666635636530353961
          38353835343936613036623361656136303761356663313938616431653235663261353038633134
          37363661316166333933656535313632356630633636373131636633346135333038393634333161
          33326563343231306262363866386336663137356534366438346631396237353361663766343638
          61663164353933396465666461386538656637613433383663633363646236393038333436663135
          6634396536336438633863373737363731643431316330626661
# Configure minimum TLS version
openshift_master_min_tls_version: VersionTLS12

# Configure allowable cipher suites
openshift_master_cipher_suites: ['TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256','TLS_RSA_WITH_AES_256_CBC_SHA','TLS_RSA_WITH_AES_128_CBC_SHA']

# Allow the master to approve node requests automatically
openshift_master_bootstrap_auto_approve: true

# Format is slightly different for etcd (literal string)
etcd_cipher_suites: "TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256,TLS_RSA_WITH_AES_256_CBC_SHA,TLS_RSA_WITH_AES_128_CBC_SHA"

# Use firewalld for OS firewall management
os_firewall_use_firewalld: true

# LDAP authentication
openshift_master_identity_providers: [{'name': 'redhatidm', 'challenge': 'true', 'login': 'true', 'kind': 'LDAPPasswordIdentityProvider', 'attributes': {'id': ['dn'], 'email': ['mail'], 'name': ['cn'], 'preferredUsername': ['uid']}, 'bindDN': '', 'bindPassword': '', 'ca': '/home/bbeaudoin/certificates/ca.pem', 'insecure': 'false', 'url': 'ldaps://idm.openshifthappens.com/cn=users,cn=accounts,dc=openshifthappens,dc=com?uid'}]

# Example with both LDAP and htpasswd auth.
#openshift_master_identity_providers: [{'name': 'redhatidm', 'challenge': 'true', 'login': 'true', 'kind': 'LDAPPasswordIdentityProvider', 'attributes': {'id': ['dn'], 'email': ['mail'], 'name': ['cn'], 'preferredUsername': ['uid']}, 'bindDN': '', 'bindPassword': '', 'ca': 'ldap-ca.pem', 'insecure': 'false', 'url': 'ldaps://idm.openshifthappens.com/cn=users,cn=accounts,dc=openshifthappens,dc=com?uid'},{'name': 'htpasswd_auth', 'login': 'true', 'challenge': 'true', 'kind': 'HTPasswdPasswordIdentityProvider'}]

# The password in this example is set to "openshift" and was generated
# with htpasswd's bcrypt function (htpasswd -n -b -B admin openshift).
#openshift_master_htpasswd_users: {'admin': '$2y$05$pyflkYBT.qP6uOWHCoRe2uE4kxQoBrROpy/st.KN6dboPxqlcvmCm'}

#openshift_master_ldap_ca: <ca text>
openshift_master_ldap_ca_file: /home/bbeaudoin/ldap-ca.pem

# Provide local certificate paths which will be deployed to masters
openshift_master_named_certificates: [{"certfile": "/home/bbeaudoin/certificates/cluster1-openshifthappens-com.crt", "keyfile": "/home/bbeaudoin/certificates/cluster1-openshifthappens-com.key", "cafile": "/home/bbeaudoin/certificates/openshifthappens-ca.crt"}]
#openshift_master_overwrite_named_certificates: true

# default subdomain to use for exposed routes
openshift_master_default_subdomain: apps.openshifthappens.com
openshift_hosted_infra_selector: "node-role.kubernetes.io/infra=true"
osm_default_node_selector: "node-role.kubernetes.io/compute=true"
osm_project_request_template: "default/project-request"
openshift_hosted_router_selector: "node-role.kubernetes.io/infra=true"
openshift_hosted_router_certificate: {"certfile": "/home/bbeaudoin/certificates/apps-openshifthappens-com.crt", "keyfile": "/home/bbeaudoin/certificates/apps-openshifthappens-com.key", "cafile": "/home/bbeaudoin/certificates/openshifthappens-ca.crt"}
osm_api_server_args: {'experimental-encryption-provider-config': ['/etc/origin/master/encryption-config.yaml']}

# Override master and node servingInfo.minTLSVersion and .cipherSuites
# valid TLS versions are VersionTLS10, VersionTLS11, VersionTLS12
# example cipher suites override, valid cipher suites are https://golang.org/pkg/crypto/tls/#pkg-constants
#openshift_master_min_tls_version: VersionTLS12
#openshift_master_cipher_suites: ['TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256', '...']
#
#openshift_node_min_tls_version: VersionTLS12
#openshift_node_cipher_suites: ['TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256', '...']

# default storage plugin dependencies to install, by default the ceph and
# glusterfs plugin dependencies will be installed, if available.
#osn_storage_plugin_deps: ['ceph','glusterfs','iscsi']

#openshift_hosted_routers: [{'name': 'router1', 'certificate': {'certfile': '/path/to/certificate/abc.crt', 'keyfile': '/path/to/certificate/abc.key', 'cafile': '/path/to/certificate/ca.crt'}, 'replicas': 1, 'serviceaccount': 'router', 'namespace': 'default', 'stats_port': 1936, 'edits': [], 'images': 'openshift3/ose-${component}:${version}', 'selector': 'type=router1', 'ports': ['80:80', '443:443']}, {'name': 'router2', 'certificate': {'certfile': '/path/to/certificate/xyz.crt', 'keyfile': '/path/to/certificate/xyz.key', 'cafile': '/path/to/certificate/ca.crt'}, 'replicas': 1, 'serviceaccount': 'router', 'namespace': 'default', 'stats_port': 1936, 'edits': [{'action': 'append', 'key': 'spec.template.spec.containers[0].env', 'value': {'name': 'ROUTE_LABELS', 'value': 'route=external'}}], 'images': 'openshift3/ose-${component}:${version}', 'selector': 'type=router2', 'ports': ['80:80', '443:443']}]

# OpenShift Registry Console Options
# Override the console image prefix:
# origin default is "cockpit/", enterprise default is "openshift3/"
#openshift_cockpit_deployer_prefix: registry.example.com/myrepo/
# origin default is "kubernetes", enterprise default is "registry-console"
#openshift_cockpit_deployer_basename: my-console
# Override image version, defaults to latest for origin, vX.Y product version for enterprise
#openshift_cockpit_deployer_version: 1.4.1

# By default metrics are not automatically deployed, set this to enable them
#openshift_metrics_install_metrics: true
# Logging deployment

# Currently logging deployment is disabled by default, enable it by setting this
#openshift_logging_install_logging: true
#openshift_logging_es_nodeselector: {"region":"infra"}

# StorageClass
# openshift_storageclass_name: gp2
# openshift_storageclass_parameters: {'type': 'gp2', 'encrypted': 'false'}
#

# Currently prometheus deployment is disabled by default, enable it by setting this
openshift_hosted_prometheus_deploy: false
os_sdn_network_plugin_name: 'redhat/openshift-ovs-networkpolicy'
# WARNING : Do not pick subnets that overlap with the default Docker bridge subnet of
# 172.17.0.0/16.  Your installation will fail and/or your configuration change will
# cause the Pod SDN or Cluster SDN to fail.
#
# WORKAROUND : If you must use an overlapping subnet, you can configure a non conflicting
# docker0 CIDR range by adding '--bip: 192.168.2.1/24' to DOCKER_NETWORK_OPTIONS
# environment variable located in /etc/sysconfig/docker-network.
# When upgrading or scaling up the following must match whats in your master config!
#  Inventory: master yaml field
#  osm_cluster_network_cidr: clusterNetworkCIDR
#  openshift_portal_net: serviceNetworkCIDR
# When installing osm_cluster_network_cidr and openshift_portal_net must be set.
# Sane examples are provided below.
#osm_cluster_network_cidr: 10.128.0.0/14
#openshift_portal_net: 172.30.0.0/16

# ExternalIPNetworkCIDRs controls what values are acceptable for the
# service external IP field. If empty, no externalIP may be set. It
# may contain a list of CIDRs which are checked for access. If a CIDR
# is prefixed with !, IPs in that CIDR will be rejected. Rejections
# will be applied first, then the IP checked against one of the
# allowed CIDRs. You should ensure this range does not overlap with
# your nodes, pods, or service CIDRs for security reasons.
#openshift_master_external_ip_network_cidrs: ['0.0.0.0/0']

# IngressIPNetworkCIDR controls the range to assign ingress IPs from for
# services of type LoadBalancer on bare metal. If empty, ingress IPs will not
# be assigned. It may contain a single CIDR that will be allocated from. For
# security reasons, you should ensure that this range does not overlap with
# the CIDRs reserved for external IPs, nodes, pods, or services.
#openshift_master_ingress_ip_network_cidr: 172.46.0.0/16

# Configure number of bits to allocate to each host's subnet e.g. 9
# would mean a /23 network on the host.
# When upgrading or scaling up the following must match whats in your master config!
#  Inventory: master yaml field
#  osm_host_subnet_length:  hostSubnetLength
# When installing osm_host_subnet_length must be set. A sane example is provided below.
#osm_host_subnet_length: 9

# Configure master API and console ports.
openshift_master_api_port: 443
openshift_master_console_port: 443

# set exact RPM version (include - prefix)
#openshift_pkg_version: -3.6.0
# you may also specify version and release, ie:
#openshift_pkg_version: -3.7.0-0.126.0.git.0.9351aae.el7

# Configure custom ca certificate
#openshift_master_ca_certificate: {'certfile': '/path/to/ca.crt', 'keyfile': '/path/to/ca.key'}
#
# NOTE: CA certificate will not be replaced with existing clusters.
# This option may only be specified when creating a new cluster or
# when redeploying cluster certificates with the redeploy-certificates
# playbook.

# Configure custom named certificates (SNI certificates)
#
# https://docs.openshift.org/latest/install_config/certificate_customization.html
# https://docs.openshift.com/enterprise/latest/install_config/certificate_customization.html
#
# NOTE: openshift_master_named_certificates is cached on masters and is an
# additive fact, meaning that each run with a different set of certificates
# will add the newly provided certificates to the cached set of certificates.
#
# An optional CA may be specified for each named certificate. CAs will
# be added to the OpenShift CA bundle which allows for the named
# certificate to be served for internal cluster communication.
#
# If you would like openshift_master_named_certificates to be overwritten with
# the provided value, specify openshift_master_overwrite_named_certificates.
#openshift_master_overwrite_named_certificates: true
#
# Provide local certificate paths which will be deployed to masters
#openshift_master_named_certificates: [{"certfile": "/path/to/custom1.crt", "keyfile": "/path/to/custom1.key", "cafile": "/path/to/custom-ca1.crt"}]
#
# Detected names may be overridden by specifying the "names" key
#openshift_master_named_certificates: [{"certfile": "/path/to/custom1.crt", "keyfile": "/path/to/custom1.key", "names": ["public-master-host.com"], "cafile": "/path/to/custom-ca1.crt"}]

# Session options
#openshift_master_session_name: ssn
#openshift_master_session_max_seconds: 3600

# An authentication and encryption secret will be generated if secrets
# are not provided. If provided, openshift_master_session_auth_secrets
# and openshift_master_encryption_secrets must be equal length.
#
# Signing secrets, used to authenticate sessions using
# HMAC. Recommended to use secrets with 32 or 64 bytes.
#openshift_master_session_auth_secrets: ['DONT+USE+THIS+SECRET+b4NV+pmZNSO']
#
# Encrypting secrets, used to encrypt sessions. Must be 16, 24, or 32
# characters long, to select AES-128, AES-192, or AES-256.
#openshift_master_session_encryption_secrets: ['DONT+USE+THIS+SECRET+b4NV+pmZNSO']

# configure how often node iptables rules are refreshed
#openshift_node_iptables_sync_period: 5s

# Configure nodeIP in the node config
# This is needed in cases where node traffic is desired to go over an
# interface other than the default network interface.
#openshift_set_node_ip: True

# Configure dnsIP in the node config
#openshift_dns_ip: 172.30.0.1

# Configure node kubelet arguments. pods-per-core is valid in OpenShift Origin 1.3 or OpenShift Container Platform 3.3 and later.
#openshift_node_kubelet_args: {'pods-per-core': ['10'], 'max-pods': ['250'], 'image-gc-high-threshold': ['85'], 'image-gc-low-threshold': ['80']}

# Configure logrotate scripts
# See: https://github.com/nickhammond/ansible-logrotate
#logrotate_scripts: [{"name": "syslog", "path": "/var/log/cron\n/var/log/maillog\n/var/log/messages\n/var/log/secure\n/var/log/spooler\n", "options": ["daily", "rotate 7", "compress", "sharedscripts", "missingok"], "scripts": {"postrotate": "/bin/kill -HUP `cat /var/run/syslogd.pid 2> /dev/null` 2> /dev/null || true"}}]

# The OpenShift-Ansible installer will fail when it detects that the
# value of openshift_hostname resolves to an IP address not bound to any local
# interfaces. This mis-configuration is problematic for any pod leveraging host
# networking and liveness or readiness probes.
# Setting this variable to false will override that check.
#openshift_hostname_check: true

# Define an additional dnsmasq.conf file to deploy to /etc/dnsmasq.d/openshift-ansible.conf
# This is useful for POC environments where DNS may not actually be available yet or to set
# options like 'strict-order' to alter dnsmasq configuration.
#openshift_node_dnsmasq_additional_config_file: /home/bob/ose-dnsmasq.conf

# Global Proxy Configuration
# These options configure HTTP_PROXY, HTTPS_PROXY, and NOPROXY environment
# variables for docker and master services.
#
# Hosts in the openshift_no_proxy list will NOT use any globally
# configured HTTP(S)_PROXYs. openshift_no_proxy accepts domains
# (.example.com), hosts (example.com), and IP addresses.
#openshift_http_proxy: http://USER:PASSWORD@IPADDR:PORT
#openshift_https_proxy: https://USER:PASSWORD@IPADDR:PORT
#openshift_no_proxy: '.hosts.example.com,some-host.com'
#
# Most environments don't require a proxy between openshift masters, nodes, and
# etcd hosts. So automatically add those hostnames to the openshift_no_proxy list.
# If all of your hosts share a common domain you may wish to disable this and
# specify that domain above instead.
#
# For example, having hosts with FQDNs: m1.ex.com, n1.ex.com, and
# n2.ex.com, one would simply add '.ex.com' to the openshift_no_proxy
# variable (above) and set this value to False
#openshift_generate_no_proxy_hosts: True
#
# These options configure the BuildDefaults admission controller which injects
# configuration into Builds. Proxy related values will default to the global proxy
# config values. You only need to set these if they differ from the global proxy settings.
# See BuildDefaults documentation at
# https://docs.openshift.org/latest/admin_guide/build_defaults_overrides.html
#openshift_builddefaults_http_proxy: http://USER:PASSWORD@HOST:PORT
#openshift_builddefaults_https_proxy: https://USER:PASSWORD@HOST:PORT
#openshift_builddefaults_no_proxy: mycorp.com
#openshift_builddefaults_git_http_proxy: http://USER:PASSWORD@HOST:PORT
#openshift_builddefaults_git_https_proxy: https://USER:PASSWORD@HOST:PORT
#openshift_builddefaults_git_no_proxy: mycorp.com
#openshift_builddefaults_image_labels: [{'name':'imagelabelname1','value':'imagelabelvalue1'}]
#openshift_builddefaults_nodeselectors: {'nodelabel1':'nodelabelvalue1'}
#openshift_builddefaults_annotations: {'annotationkey1':'annotationvalue1'}
#openshift_builddefaults_resources_requests_cpu: 100m
#openshift_builddefaults_resources_requests_memory: 256Mi
#openshift_builddefaults_resources_limits_cpu: 1000m
#openshift_builddefaults_resources_limits_memory: 512Mi

# Or you may optionally define your own build defaults configuration serialized as json
#openshift_builddefaults_json: '{"BuildDefaults":{"configuration":{"apiVersion":"v1","env":[{"name":"HTTP_PROXY","value":"http://proxy.example.com.redhat.com:3128"},{"name":"NO_PROXY","value":"ose3-master.example.com"}],"gitHTTPProxy":"http://proxy.example.com:3128","gitNoProxy":"ose3-master.example.com","kind":"BuildDefaultsConfig"}}}'

# These options configure the BuildOverrides admission controller which injects
# configuration into Builds.
# See BuildOverrides documentation at
# https://docs.openshift.org/latest/admin_guide/build_defaults_overrides.html
#openshift_buildoverrides_force_pull: true
#openshift_buildoverrides_image_labels: [{'name':'imagelabelname1','value':'imagelabelvalue1'}]
#openshift_buildoverrides_nodeselectors: {'nodelabel1':'nodelabelvalue1'}
#openshift_buildoverrides_annotations: {'annotationkey1':'annotationvalue1'}

# Or you may optionally define your own build overrides configuration serialized as json
#openshift_buildoverrides_json: '{"BuildOverrides":{"configuration":{"apiVersion":"v1","kind":"BuildDefaultsConfig","forcePull":"true"}}}'

# Enable service catalog
openshift_enable_service_catalog: false

# Enable template service broker (requires service catalog to be enabled, above)
template_service_broker_install: false

# TSB node selector
#template_service_broker_selector: {'region': 'infra'}

# Force a specific prefix (IE: registry) to use when pulling the service catalog image
# NOTE: The registry all the way up to the start of the image name must be provided. Two examples
# below are provided.
#openshift_service_catalog_image_prefix: docker.io/openshift/origin-
#openshift_service_catalog_image_prefix: registry.access.redhat.com/openshift3/ose-
# Force a specific image version to use when pulling the service catalog image
#openshift_service_catalog_image_version: v3.7

# Configure one of more namespaces whose templates will be served by the TSB
#openshift_template_service_broker_namespaces: ['openshift']

# masterConfig.volumeConfig.dynamicProvisioningEnabled, configurable as of 1.2/3.2, enabled by default
#openshift_master_dynamic_provisioning_enabled: False

# Admission plugin config
#openshift_master_admission_plugin_config: {"ProjectRequestLimit":{"configuration":{"apiVersion":"v1","kind":"ProjectRequestLimitConfig","limits":[{"selector":{"admin":"true"}},{"maxProjects":"1"}]}},"PodNodeConstraints":{"configuration":{"apiVersion":"v1","kind":"PodNodeConstraintsConfig"}}}

# Configure usage of openshift_clock role.
#openshift_clock_enabled: true

# OpenShift Per-Service Environment Variables
# Environment variables are added to /etc/sysconfig files for
# each OpenShift service: node, master (api and controllers).
# API and controllers environment variables are merged in single
# master environments.
#openshift_master_api_env_vars: {"ENABLE_HTTP2": "true"}
#openshift_master_controllers_env_vars: {"ENABLE_HTTP2": "true"}
#openshift_node_env_vars: {"ENABLE_HTTP2": "true"}

# Enable API service auditing
#openshift_master_audit_config: {"enabled": true}
#
# In case you want more advanced setup for the auditlog you can
# use this line.
# The directory in "auditFilePath" will be created if it's not
# exist
#openshift_master_audit_config: {"enabled": true, "auditFilePath": "/var/log/openpaas-oscp-audit/openpaas-oscp-audit.log", "maximumFileRetentionDays": 14, "maximumFileSizeMegabytes": 500, "maximumRetainedFiles": 5}

# Enable origin repos that point at Centos PAAS SIG, defaults to true, only used
# by deployment_type: origin
#openshift_enable_origin_repo: false

# Validity of the auto-generated OpenShift certificates in days.
# See also openshift_hosted_registry_cert_expire_days above.
#
#openshift_ca_cert_expire_days: 1825
#openshift_node_cert_expire_days: 730
#openshift_master_cert_expire_days: 730

# Validity of the auto-generated external etcd certificates in days.
# Controls validity for etcd CA, peer, server and client certificates.
#
#etcd_ca_default_days: 1825
#
# ServiceAccountConfig:LimitSecretRefences rejects pods that reference secrets their service accounts do not reference
# openshift_master_saconfig_limitsecretreferences: false

# Upgrade Control
#
# By default nodes are upgraded in a serial manner one at a time and all failures
# are fatal, one set of variables for normal nodes, one set of variables for
# nodes that are part of control plane as the number of hosts may be different
# in those two groups.
#openshift_upgrade_nodes_serial: 1
#openshift_upgrade_nodes_max_fail_percentage: 0
#openshift_upgrade_control_plane_nodes_serial: 1
#openshift_upgrade_control_plane_nodes_max_fail_percentage: 0
#
# You can specify the number of nodes to upgrade at once. We do not currently
# attempt to verify that you have capacity to drain this many nodes at once
# so please be careful when specifying these values. You should also verify that
# the expected number of nodes are all schedulable and ready before starting an
# upgrade. If it's not possible to drain the requested nodes the upgrade will
# stall indefinitely until the drain is successful.
#
# If you're upgrading more than one node at a time you can specify the maximum
# percentage of failure within the batch before the upgrade is aborted. Any
# nodes that do fail are ignored for the rest of the playbook run and you should
# take care to investigate the failure and return the node to service so that
# your cluster.
#
# The percentage must exceed the value, this would fail on two failures
# openshift_upgrade_nodes_serial: 4 openshift_upgrade_nodes_max_fail_percentage=49
# where as this would not
# openshift_upgrade_nodes_serial: 4 openshift_upgrade_nodes_max_fail_percentage=50
#
# A timeout to wait for nodes to drain pods can be specified to ensure that the
# upgrade continues even if nodes fail to drain pods in the allowed time. The
# default value of 0 will wait indefinitely allowing the admin to investigate
# the root cause and ensuring that disruption budgets are respected. If the
# a timeout of 0 is used there will also be one attempt to re-try draining the
# node. If a non zero timeout is specified there will be no attempt to retry.
# openshift_upgrade_nodes_drain_timeout: 0
#
# Multiple data migrations take place and if they fail they will fail the upgrade
# You may wish to disable these or make them non fatal
#
# openshift_upgrade_pre_storage_migration_enabled: true
# openshift_upgrade_pre_storage_migration_fatal: true
# openshift_upgrade_post_storage_migration_enabled: true
# openshift_upgrade_post_storage_migration_fatal: false

######################################################################
# CloudForms/ManageIQ (CFME/MIQ) Configuration

# See the readme for full descriptions and getting started
# instructions: ../../roles/openshift_management/README.md or go directly to
# their definitions: ../../roles/openshift_management/defaults/main.yml
# ../../roles/openshift_management/vars/main.yml
#
# Namespace for the CFME project
#openshift_management_project: openshift-management

# Namespace/project description
#openshift_management_project_description: CloudForms Management Engine

# Choose 'miq-template' for a podified database install
# Choose 'miq-template-ext-db' for an external database install
#
# If you are using the miq-template-ext-db template then you must add
# the required database parameters to the
# openshift_management_template_parameters variable.
#openshift_management_app_template: miq-template

# Allowed options: nfs, nfs_external, preconfigured, cloudprovider.
#openshift_management_storage_class: nfs

# [OPTIONAL] - If you are using an EXTERNAL NFS server, such as a
# netapp appliance, then you must set the hostname here. Leave the
# value as 'false' if you are not using external NFS.
#openshift_management_storage_nfs_external_hostname: false

# [OPTIONAL] - If you are using external NFS then you must set the base
# path to the exports location here.
#
# Additionally: EXTERNAL NFS REQUIRES that YOU CREATE the nfs exports
# that will back the application PV and optionally the database
# pv. Export path definitions, relative to
# {{ openshift_management_storage_nfs_base_dir }}
#
# LOCAL NFS NOTE:
#
# You may may also change this value if you want to change the default
# path used for local NFS exports.
#openshift_management_storage_nfs_base_dir: /exports

# LOCAL NFS NOTE:
#
# You may override the automatically selected LOCAL NFS server by
# setting this variable. Useful for testing specific task files.
#openshift_management_storage_nfs_local_hostname: false

# These are the default values for the username and password of the
# management app. Changing these values in your inventory will not
# change your username or password. You should only need to change
# these values in your inventory if you already changed the actual
# name and password AND are trying to use integration scripts.
#
# For example, adding this cluster as a container provider,
# playbooks/byo/openshift-management/add_container_provider.yml
#openshift_management_username: admin
#openshift_management_password: smartvm

# A hash of parameters you want to override or set in the
# miq-template.yaml or miq-template-ext-db.yaml templates. Set this in
# your inventory file as a simple hash. Acceptable values are defined
# under the .parameters list in files/miq-template{-ext-db}.yaml
# Example:
#
# openshift_management_template_parameters: {'APPLICATION_MEM_REQ': '512Mi'}
#openshift_management_template_parameters: {}

# Firewall configuration
# You can open additional firewall ports by defining them as a list. of service
# names and ports/port ranges for either masters or nodes.
#openshift_master_open_ports: [{"service":"svc1","port":"11/tcp"}]
#openshift_node_open_ports: [{"service":"svc2","port":"12-13/tcp"},{"service":"svc3","port":"14/udp"}]

# Service port node range
#openshift_node_port_range: 30000-32767

openshift_master_cluster_method: native
openshift_master_cluster_hostname: internal1.openshifthappens.com
openshift_master_cluster_public_hostname: cluster1.openshifthappens.com
openshift_node_groups:
  - name: node-config-master
    labels:
      - 'node-role.kubernetes.io/master=true'
      - 'region=master'
    edits:
    - key: imageConfig.latest
      value: true
    - key: servingInfo.minTLSVersion
      value: "VersionTLS12"
    - key: servingInfo.cipherSuites
      value:
      - "TLS_ECDHE_ECDSA_WITH_AES_128_GCM_SHA256"
      - "TLS_ECDHE_ECDSA_WITH_AES_256_GCM_SHA384"
      - "TLS_ECDHE_ECDSA_WITH_AES_128_CBC_SHA256"
  - name: node-config-infra
    labels:
      - 'node-role.kubernetes.io/infra=true'
      - 'region=infra'
    edits:
    - key: servingInfo.minTLSVersion
      value: "VersionTLS12"
    - key: servingInfo.cipherSuites
      value:
      - "TLS_ECDHE_ECDSA_WITH_AES_128_GCM_SHA256"
      - "TLS_ECDHE_ECDSA_WITH_AES_256_GCM_SHA384"
      - "TLS_ECDHE_ECDSA_WITH_AES_128_CBC_SHA256"
  - name: node-config-compute
    labels:
      - 'node-role.kubernetes.io/compute=true'
      - 'region=app'
    edits:
    - key: servingInfo.minTLSVersion
      value: "VersionTLS12"
    - key: servingInfo.cipherSuites
      value:
      - "TLS_ECDHE_ECDSA_WITH_AES_128_GCM_SHA256"
      - "TLS_ECDHE_ECDSA_WITH_AES_256_GCM_SHA384"
      - "TLS_ECDHE_ECDSA_WITH_AES_128_CBC_SHA256"
  - name: node-config-builder
    labels:
      - 'node-role.kubernetes.io/compute=false'
      - 'region=builder'
    edits:
    - key: servingInfo.minTLSVersion
      value: "VersionTLS12"
    - key: servingInfo.cipherSuites
      value:
      - "TLS_ECDHE_ECDSA_WITH_AES_128_GCM_SHA256"
      - "TLS_ECDHE_ECDSA_WITH_AES_256_GCM_SHA384"
      - "TLS_ECDHE_ECDSA_WITH_AES_128_CBC_SHA256"

